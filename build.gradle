import freemarker.template.Configuration

import org.yaml.snakeyaml.Yaml

buildscript {
    repositories {
        jcenter()
    }

    dependencies {
        classpath 'com.github.spullara.mustache.java:compiler:0.9.6'
        classpath 'org.freemarker:freemarker:2.3.29'
        classpath 'org.yaml:snakeyaml:1.25'
    }
}

plugins {
    id "org.asciidoctor.convert" version "1.6.1"
    id "com.github.jruby-gradle.base" version "1.7.0"
}

wrapper {
    gradleVersion = "5.6.4"
    distributionType = Wrapper.DistributionType.ALL
}

def cfg = new Configuration()

repositories {
    jcenter()
}

dependencies {
    asciidoctor 'org.asciidoctor:asciidoctorj-diagram:1.5.18'
    asciidoctor 'org.asciidoctor:asciidoctorj-epub3:1.5.0-alpha.9'
    asciidoctor 'org.asciidoctor:asciidoctorj-pdf:1.5.0-beta.8'
    
    // asciidoctor-bibtex requires a 4.x version of bibtex-ruby, but for some reason the build installs a 5.x version by default.
    // To fix this we need this manual dependency on a 4.x version of bibtex-ruby.
    gems 'rubygems:bibtex-ruby:4.4.7'
    gems 'rubygems:asciidoctor-bibtex:0.6.0'
}

asciidoctorj {
    version = '1.6.2'
}

task bibtex() {
    def inputDir = file("src/docs/bibtex")
    def combinedFile = file("src/docs/asciidoc/combined.bib")
    inputs.dir(inputDir)
    outputs.file(combinedFile)

    doFirst {
        combinedFile.text = fileTree(inputDir) {
            include "**/*.bib"
        }.collect {it.text}.join("\n")
    }
}

task buildMaindocs() {
    def templateFileName = "src/docs/templates/handbook.ftlh"
    def configFile = file("config.yaml")
    def chapterDir = file("src/docs/chapter")
    def outputDir = file("src/docs/asciidoc")

    inputs.files(templateFileName, configFile)
    inputs.dir(chapterDir)
    outputs.dir(outputDir)

    doLast {
        def template = cfg.getTemplate(templateFileName)
        def parser = new Yaml()
        def books = parser.loadAll(configFile.text)
        books.each {book ->
            def includes = []
            book.content.each {dir ->
                includes << fileTree(new File(chapterDir, dir)).collect().sort()
            }
            book.directories = includes
            new File(outputDir, book.file).withWriter("UTF-8") {w ->
                template.process(book, w)
            }
        }
    }
}

asciidoctor {
    dependsOn = [bibtex, jrubyPrepare, buildMaindocs]
    requires = ['asciidoctor-diagram', 'asciidoctor-bibtex']
    gemPath = jrubyPrepare.outputDir

    options doctype: 'book'

    backends = ['html5', 'pdf']

    attributes = [
        'source-highlighter': 'coderay',
        'coderay-linenums-mode': 'table',
        'toc': 'left',
        'imagesdir': 'images',
        'icon': 'font',
        'linkattrs': true,
        'encoding': 'utf-8',
        'bibtex-file': 'combined.bib',
    ]

    sources {
        include '*.adoc'
    }

    resources {
        from('src/docs/asciidoc') {
            include '**/*.png'
        }
    }
}

clean {
    delete(fileTree('src/docs/asciidoc/images') {
        include '**/diag-*'
    })
    delete(fileTree('src/docs/asciidoc') {
        include '*.adoc'
    })
    delete('src/docs/asciidoc/combined.bib')
}

defaultTasks 'asciidoctor'
